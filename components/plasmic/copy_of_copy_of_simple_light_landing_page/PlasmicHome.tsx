// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: j4cXxWNaY4H61DNMUdHEeq
// Component: Az6psyQSA4D9k
import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";

import * as p from "@plasmicapp/react-web";
import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";

import "@plasmicapp/react-web/lib/plasmic.css";
import * as defaultcss from "../plasmic__default_style.module.css"; // plasmic-import: global/defaultcss
import * as projectcss from "./plasmic_copy_of_copy_of_simple_light_landing_page.module.css"; // plasmic-import: j4cXxWNaY4H61DNMUdHEeq/projectcss
import * as sty from "./PlasmicHome.module.css"; // plasmic-import: Az6psyQSA4D9k/css

import VectorIcon from "./icons/PlasmicIcon__Vector"; // plasmic-import: pm6E6G7gm1/icon

export type PlasmicHome__VariantMembers = {};

export type PlasmicHome__VariantsArgs = {};
type VariantPropType = keyof PlasmicHome__VariantsArgs;
export const PlasmicHome__VariantProps = new Array<VariantPropType>();

export type PlasmicHome__ArgsType = {};
type ArgPropType = keyof PlasmicHome__ArgsType;
export const PlasmicHome__ArgProps = new Array<ArgPropType>();

export type PlasmicHome__OverridesType = {
  root?: p.Flex<"div">;
  desktop3?: p.Flex<"div">;
  image117?: p.Flex<"div">;
  rectangle1390?: p.Flex<"div">;
  svg?: p.Flex<"svg">;
  smartwatch?: p.Flex<"div">;
  loremIpsumDolorSitAmetConsecteturAdipiscingElitAliquamCongueSedEtLeoDignissimOdioJusto?: p.Flex<"div">;
  smartwaatch5?: p.Flex<"div">;
  rectangle1394?: p.Flex<"div">;
  white?: p.Flex<"div">;
  blanco1?: p.Flex<"div">;
  rectangle1395?: p.Flex<"div">;
  dark1?: p.Flex<"div">;
  rectangle1396?: p.Flex<"div">;
  rectangle13952?: p.Flex<"div">;
  smartwaatch52?: p.Flex<"div">;
};

export interface DefaultHomeProps {
  className?: string;
}

function PlasmicHome__RenderFunc(props: {
  variants: PlasmicHome__VariantsArgs;
  args: PlasmicHome__ArgsType;
  overrides: PlasmicHome__OverridesType;
  forNode?: string;
}) {
  const { variants, args, overrides, forNode } = props;

  return (
    <React.Fragment>
      <Head>
        <title key="title">{""}</title>
      </Head>

      <div className={defaultcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            defaultcss.all,
            projectcss.root_reset,
            sty.root
          )}
        >
          <div
            data-plasmic-name={"desktop3"}
            data-plasmic-override={overrides.desktop3}
            className={classNames(defaultcss.all, sty.desktop3)}
          >
            <div
              data-plasmic-name={"image117"}
              data-plasmic-override={overrides.image117}
              className={classNames(defaultcss.all, sty.image117)}
            />

            <div
              data-plasmic-name={"rectangle1390"}
              data-plasmic-override={overrides.rectangle1390}
              className={classNames(defaultcss.all, sty.rectangle1390)}
            />

            <div
              className={classNames(
                defaultcss.all,
                defaultcss.__wab_text,
                sty.box__qBtM
              )}
            >
              {"Home"}
            </div>

            <div
              className={classNames(
                defaultcss.all,
                defaultcss.__wab_text,
                sty.box__ubK
              )}
            >
              {"Smartphone"}
            </div>

            <div
              className={classNames(
                defaultcss.all,
                defaultcss.__wab_text,
                sty.box__dG02
              )}
            >
              {"Store"}
            </div>

            <div
              className={classNames(
                defaultcss.all,
                defaultcss.__wab_text,
                sty.box__y50Ji
              )}
            >
              {"Buy Now"}
            </div>

            <VectorIcon
              data-plasmic-name={"svg"}
              data-plasmic-override={overrides.svg}
              className={classNames(defaultcss.all, sty.svg)}
              role={"img"}
            />

            <div
              data-plasmic-name={"smartwatch"}
              data-plasmic-override={overrides.smartwatch}
              className={classNames(
                defaultcss.all,
                defaultcss.__wab_text,
                sty.smartwatch
              )}
            >
              {"Smartwatch "}
            </div>

            <div
              data-plasmic-name={
                "loremIpsumDolorSitAmetConsecteturAdipiscingElitAliquamCongueSedEtLeoDignissimOdioJusto"
              }
              data-plasmic-override={
                overrides.loremIpsumDolorSitAmetConsecteturAdipiscingElitAliquamCongueSedEtLeoDignissimOdioJusto
              }
              className={classNames(
                defaultcss.all,
                defaultcss.__wab_text,
                sty.loremIpsumDolorSitAmetConsecteturAdipiscingElitAliquamCongueSedEtLeoDignissimOdioJusto
              )}
            >
              {
                "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam congue sed et leo, dignissim odio justo.\n"
              }
            </div>

            <div
              className={classNames(
                defaultcss.all,
                defaultcss.__wab_text,
                sty.box__jPzms
              )}
            >
              {"ELEMENT SERIE"}
            </div>

            <div
              data-plasmic-name={"smartwaatch5"}
              data-plasmic-override={overrides.smartwaatch5}
              className={classNames(defaultcss.all, sty.smartwaatch5)}
            />

            <div
              data-plasmic-name={"rectangle1394"}
              data-plasmic-override={overrides.rectangle1394}
              className={classNames(defaultcss.all, sty.rectangle1394)}
            />

            <div
              data-plasmic-name={"white"}
              data-plasmic-override={overrides.white}
              className={classNames(
                defaultcss.all,
                defaultcss.__wab_text,
                sty.white
              )}
            >
              {"White "}
            </div>

            <div
              className={classNames(
                defaultcss.all,
                defaultcss.__wab_text,
                sty.box___4OkRx
              )}
            >
              {"Element"}
            </div>

            <div
              data-plasmic-name={"blanco1"}
              data-plasmic-override={overrides.blanco1}
              className={classNames(defaultcss.all, sty.blanco1)}
            />

            <div
              data-plasmic-name={"rectangle1395"}
              data-plasmic-override={overrides.rectangle1395}
              className={classNames(defaultcss.all, sty.rectangle1395)}
            />

            <div
              className={classNames(
                defaultcss.all,
                defaultcss.__wab_text,
                sty.box__eRo2N
              )}
            >
              {"Dark"}
            </div>

            <div
              className={classNames(
                defaultcss.all,
                defaultcss.__wab_text,
                sty.box__kDxZl
              )}
            >
              {"Element"}
            </div>

            <div
              data-plasmic-name={"dark1"}
              data-plasmic-override={overrides.dark1}
              className={classNames(defaultcss.all, sty.dark1)}
            />

            <div
              data-plasmic-name={"rectangle1396"}
              data-plasmic-override={overrides.rectangle1396}
              className={classNames(defaultcss.all, sty.rectangle1396)}
            />

            <div
              data-plasmic-name={"rectangle13952"}
              data-plasmic-override={overrides.rectangle13952}
              className={classNames(defaultcss.all, sty.rectangle13952)}
            />

            <div
              data-plasmic-name={"smartwaatch52"}
              data-plasmic-override={overrides.smartwaatch52}
              className={classNames(defaultcss.all, sty.smartwaatch52)}
            />
          </div>
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "desktop3",
    "image117",
    "rectangle1390",
    "svg",
    "smartwatch",
    "loremIpsumDolorSitAmetConsecteturAdipiscingElitAliquamCongueSedEtLeoDignissimOdioJusto",
    "smartwaatch5",
    "rectangle1394",
    "white",
    "blanco1",
    "rectangle1395",
    "dark1",
    "rectangle1396",
    "rectangle13952",
    "smartwaatch52"
  ],
  desktop3: [
    "desktop3",
    "image117",
    "rectangle1390",
    "svg",
    "smartwatch",
    "loremIpsumDolorSitAmetConsecteturAdipiscingElitAliquamCongueSedEtLeoDignissimOdioJusto",
    "smartwaatch5",
    "rectangle1394",
    "white",
    "blanco1",
    "rectangle1395",
    "dark1",
    "rectangle1396",
    "rectangle13952",
    "smartwaatch52"
  ],
  image117: ["image117"],
  rectangle1390: ["rectangle1390"],
  svg: ["svg"],
  smartwatch: ["smartwatch"],
  loremIpsumDolorSitAmetConsecteturAdipiscingElitAliquamCongueSedEtLeoDignissimOdioJusto: [
    "loremIpsumDolorSitAmetConsecteturAdipiscingElitAliquamCongueSedEtLeoDignissimOdioJusto"
  ],
  smartwaatch5: ["smartwaatch5"],
  rectangle1394: ["rectangle1394"],
  white: ["white"],
  blanco1: ["blanco1"],
  rectangle1395: ["rectangle1395"],
  dark1: ["dark1"],
  rectangle1396: ["rectangle1396"],
  rectangle13952: ["rectangle13952"],
  smartwaatch52: ["smartwaatch52"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<
  T extends NodeNameType
> = typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  desktop3: "div";
  image117: "div";
  rectangle1390: "div";
  svg: "svg";
  smartwatch: "div";
  loremIpsumDolorSitAmetConsecteturAdipiscingElitAliquamCongueSedEtLeoDignissimOdioJusto: "div";
  smartwaatch5: "div";
  rectangle1394: "div";
  white: "div";
  blanco1: "div";
  rectangle1395: "div";
  dark1: "div";
  rectangle1396: "div";
  rectangle13952: "div";
  smartwaatch52: "div";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicHome__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> = { // Explicitly specify variants, args, and overrides as objects
  variants?: PlasmicHome__VariantsArgs;
  args?: PlasmicHome__ArgsType;
  overrides?: NodeOverridesType<T>;
} & Omit<PlasmicHome__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
  // Specify args directly as props
  Omit<PlasmicHome__ArgsType, ReservedPropsType> &
  // Specify overrides for each element directly as props
  Omit<
    NodeOverridesType<T>,
    ReservedPropsType | VariantPropType | ArgPropType
  > &
  // Specify props for the root element
  Omit<
    Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
    ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
  >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicHome__ArgProps,
      internalVariantPropNames: PlasmicHome__VariantProps
    });

    return PlasmicHome__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicHome";
  } else {
    func.displayName = `PlasmicHome.${nodeName}`;
  }
  return func;
}

export const PlasmicHome = Object.assign(
  // Top-level PlasmicHome renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    desktop3: makeNodeComponent("desktop3"),
    image117: makeNodeComponent("image117"),
    rectangle1390: makeNodeComponent("rectangle1390"),
    svg: makeNodeComponent("svg"),
    smartwatch: makeNodeComponent("smartwatch"),
    loremIpsumDolorSitAmetConsecteturAdipiscingElitAliquamCongueSedEtLeoDignissimOdioJusto: makeNodeComponent(
      "loremIpsumDolorSitAmetConsecteturAdipiscingElitAliquamCongueSedEtLeoDignissimOdioJusto"
    ),
    smartwaatch5: makeNodeComponent("smartwaatch5"),
    rectangle1394: makeNodeComponent("rectangle1394"),
    white: makeNodeComponent("white"),
    blanco1: makeNodeComponent("blanco1"),
    rectangle1395: makeNodeComponent("rectangle1395"),
    dark1: makeNodeComponent("dark1"),
    rectangle1396: makeNodeComponent("rectangle1396"),
    rectangle13952: makeNodeComponent("rectangle13952"),
    smartwaatch52: makeNodeComponent("smartwaatch52"),

    // Metadata about props expected for PlasmicHome
    internalVariantProps: PlasmicHome__VariantProps,
    internalArgProps: PlasmicHome__ArgProps
  }
);

export default PlasmicHome;
/* prettier-ignore-end */
